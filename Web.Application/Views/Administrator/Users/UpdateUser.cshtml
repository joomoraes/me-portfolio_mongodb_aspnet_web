@using Web.Application.Domain.Enums
@model Web.Application.Domain.Dtos.Users.UpdateDtoUsers



    @Html.HiddenFor(x => x.Id)
    <div class="row-fluid">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(x => x.Username, new { @class = "label-form"})
                <div class="controls">
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.Email, new { @class = "label-form" })
                <div class="controls">
                    @Html.TextBoxFor(model  => model.Email, new { @class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.Country, new { @class = "label-form" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Country, new { @class = "form-control"})
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(x => x.State, new { @class = "label-form" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.State, new { @class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.ZipCode, new { @class = "label-form"})
                <div  class="controls">
                    @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.Profile, new { @class = "label-form"})
                <div class="controls">
                <select asp-for="Profile" asp-items="Html.GetEnumSelectList<EProfile>()"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(x => x.City, new { @class = "label-form"})
                <div class="controls">
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.Password, new { @class = "label-form"})
                <div class="controls">
                    @Html.TextBoxFor(model => model.Password, new  { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

    <script>

    function updateUser()
    {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateUser", "Administrator")',
            data: {
                Id: $('#Id').val(),
                Username: $('#Username').val(),
                Email: $('#Email').val(),
                Country: $('#Country').val(),
                State: $('#State').val(),
                City: $('#City').val(),
                ZipCode: $('#ZipCode').val(),
                Profile: $('#Profile').val(),
                Password: $('#Password').val()
            },
            success: function (result)
            {
                $('#exampleModal').modal('hide');

                Swal.fire({
                    title: 'Update Successful!',
                    text: "User has been update!",
                    icon: 'success',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Ok!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                })
            }
        });
    }

    </script>




